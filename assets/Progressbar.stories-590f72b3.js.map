{"version":3,"file":"Progressbar.stories-590f72b3.js","sources":["../../src/components/common/Progressbar/ProgressLine.tsx","../../src/components/common/Progressbar/ProgressCircle.tsx","../../src/components/common/Progressbar/index.tsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\ninterface ProgressLineProps {\n  percent: number;\n}\nexport const ProgressLine = ({ percent }: ProgressLineProps) => {\n  return (\n    <>\n      <BackgroundLine />\n      <CompletedLine progress={percent} />\n    </>\n  );\n};\n\nconst BackgroundLine = styled.div<{ progress?: number }>`\n  width: 100%;\n  height: 3px;\n\n  position: absolute;\n  top: 50%;\n  transform: translate(0, -50%);\n\n  background-color: ${({ theme }) => theme.colors.gray_300};\n`;\n\nconst fillAnimation = keyframes`\n  from {\n    width: 0;\n  }\n  to {\n    width: ${(progress) => (progress || 0) + '%'};\n  }\n`;\n\nconst CompletedLine = styled.div<{ progress: number }>`\n  width: ${(props) => props.progress || 0}%;\n  height: 3px;\n\n  position: absolute;\n  top: 50%;\n  transform: translate(0, -50%);\n\n  background: ${({ theme }) => theme.colors.green};\n  animation: ${fillAnimation} ${({ progress }) => 0.2 * (progress / 10)}s linear\n    forwards;\n`;\n","import styled, { css } from 'styled-components';\n\ninterface PropsType {\n  size?: string;\n  step: number;\n  status?: string;\n}\nexport const ProgressCircle = ({ size, step, status }: PropsType) => {\n  return <Circle size={size} status={status}>{`${step}`}</Circle>;\n};\n\nconst Circle = styled.div<{ size?: string; status?: string }>`\n  ${({ size = '20px' }) => css`\n    width: ${size};\n    height: ${size};\n    line-height: ${size};\n  `}\n\n  ${({ status = 'incomplete', theme }) => {\n    if (status === 'incomplete') {\n      return css`\n        background-color: ${theme.colors.gray_300};\n        color: ${theme.colors.gray_500};\n      `;\n    }\n    if (status === 'complete') {\n      return css`\n        background-color: ${theme.colors.green};\n        color: white;\n      `;\n    }\n  }}\n\n  font-family: \"PretendardMedium\";\n  text-align: center;\n\n  border-radius: 50%;\n\n  z-index: 100;\n\n  transition: background-color 0.1s ease;\n`;\n","import styled from 'styled-components';\n\nimport { ProgressLine } from './ProgressLine';\nimport { ProgressCircle } from './ProgressCircle';\n\ninterface ProgressbarPropsType {\n  /**\n   * Total number of progress steps\n   */\n  totalProgressStep: number;\n  /**\n   * Number of completed progress steps\n   */\n  completedProgressStep: number;\n  /**\n   * Percentage of completed progress\n   */\n  percent: number;\n}\n\nexport const Progressbar = ({\n  totalProgressStep,\n  completedProgressStep,\n  percent,\n}: ProgressbarPropsType) => {\n  return (\n    <ProgressbarContainer>\n      <ProgressLine percent={percent} />\n      {Array.from({ length: totalProgressStep }, (_, idx) => (\n        <ProgressCircle\n          key={idx}\n          size=\"28px\"\n          step={idx + 1}\n          status={idx + 1 <= completedProgressStep ? 'complete' : 'incomplete'}\n        />\n      ))}\n    </ProgressbarContainer>\n  );\n};\n\nconst ProgressbarContainer = styled.div`\n  width: 220px;\n  height: 40px;\n\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n"],"names":["ProgressLine","percent","jsxs","Fragment","jsx","BackgroundLine","CompletedLine","styled","theme","fillAnimation","keyframes","progress","props","ProgressCircle","size","step","status","Circle","css","Progressbar","totalProgressStep","completedProgressStep","ProgressbarContainer","_","idx"],"mappings":"iMAKO,MAAAA,EAAA,CAAA,CAAA,QAAAC,KACLC,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,EAAA,EAAgBD,EAAAE,EAAA,CAAA,SAAAL,CAAA,CAAA,CACkB,CAAA,CAAA,EAKxCI,EAAAE,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8B,CAAA,CAAA,MAAAC,CAAA,IAAAA,EAAA,OAAA,QAAA;AAAA,EAW9BC,EAAAC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,aAAsBC,IAAAA,GAAA,GAAA,GAAA;AAAA;AAAA,EAStBL,EAAAC,EAAA;AAAA,WAA6BK,GAAAA,EAAA,UAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACY,CAAA,CAAA,MAAAJ,CAAA,IAAAA,EAAA,OAAA,KAAA;AAAA,eAOQC,CAAA,IAAA,CAAA,CAAA,SAAAE,CAAA,IAAA,IAAAA,EAAA,GAAA;AAAA;AAAA,wMCnC1C,MAAAE,EAAA,CAAA,CAAA,KAAAC,EAAA,KAAAC,EAAA,OAAAC,CAAA,IACLZ,EAAAa,EAAA,CAAA,KAAAH,EAAA,OAAAE,EAAA,SAAA,GAAAD,CAAA,EAAA,CAAA,EAGFE,EAAAV,EAAA;AAAA,IAAsB,CAAA,CAAA,KAAAO,EAAA,MAAA,IAAAI;AAAAA,aACKJ,CAAA;AAAA,cACVA,CAAA;AAAA,mBACCA,CAAA;AAAA,GACK;AAAA;AAAA,IACpB,CAAA,CAAA,OAAAE,EAAA,aAAA,MAAAR,CAAA,IAAA,CAGC,GAAAQ,IAAA,aACE,OAAAE;AAAAA,4BAAOV,EAAA,OAAA,QAAA;AAAA,iBACoCA,EAAA,OAAA,QAAA;AAAA,QAI7C,GAAAQ,IAAA,WACE,OAAAE;AAAAA,4BAAOV,EAAA,OAAA,KAAA;AAAA;AAAA,OAKX,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oXCXK,MAAAW,EAAA,CAAA,CAAqB,kBAAAC,EAC1B,sBAAAC,EACA,QAAApB,CAEF,IACEC,EAAAoB,EAAA,CAAA,SAAA,CAEIlB,EAAAJ,EAAA,CAAA,QAAAC,EAAA,EAAgC,MAAA,KAAA,CAAA,OAAAmB,CAAA,EAAA,CAAAG,EAAAC,IAAApB,EAE9BS,EAAC,CAAA,KAAA,OAEM,KAAAW,EAAA,EACO,OAAAA,EAAA,GAAAH,EAAA,WAAA,YAC4C,EAAAG,CAHnD,CAAA,CAKR,CAAA,CAAA,EAKPF,EAAAf,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;"}